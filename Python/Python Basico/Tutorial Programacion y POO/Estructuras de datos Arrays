
#Code used for the 'Crear un array' class.

class Array(object):
    "Represents an array."

    def __init__(self, capacity, fill_value = None):
        self.items = list() #si, estamos manejando listas, guarda todo en esa lista
        for i in range(capacity):
            self.items.append(fill_value)

    #Tiene como entradas un entero que indica la longitud y un valor de relleno null
    #genera una coleccion de n elementos y todos vacios
    #guarda los elementos nulos en la lista, el atributo a usar es la lista
    
    #todos los metodos son privados, ya que el fin es consultar

    def __len__(self): #devuelve longitud del arreglo
        return len(self.items)

    def __str__(self): #convierte a string
        return str(self.items)

    def __iter__(self):#itera los elementos
        return iter(self.items)

    def __getitem__(self, index):#obitene un elemento del arreglo, requere una posicion
        return self.items[index]

    def __setitem__(self, index, new_item): #reemplaza elementos
        self.items[index] = new_item

########################################################################################################

from array import Array #importa la clase de arrays, para usarlo en otros archivos como un objeto cualquiera
menu = Array(5) #crea el objeto menu, que es un array
len(menu) #pide la longitud
print(menu) 
for i in range(len(menu)):
    menu[i] = i + 1 #da un valor de acuerdo a la iteracion
menu[0]
menu[2]
for item in menu:
    print(menu)
#usa los metodos creados
menu.__len__()
menu.__str__()
menu.__iter__()
menu.__getitem__(2)
menu.__setitem__(2, 100) #reemplaza con los metodos creados
menu.__getitem__(2)
