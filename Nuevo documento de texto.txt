Axum@DESKTOP-JP3E8AN MINGW64 /
$ das
bash: das: command not found

Axum@DESKTOP-JP3E8AN MINGW64 /
$

Axum@DESKTOP-JP3E8AN MINGW64 /
$ cd /c

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ ls
'$Recycle.Bin'/             DumpStack.log      'Program Files'/               Windows/
'$WinREAgent'/              DumpStack.log.tmp  'Program Files (x86)'/         Windows.old/
'$Windows.~WS'/             ESD/                ProgramData/                  hiberfil.sys
'Archivos de programa'@     Juegos/             Recovery/                     pagefile.sys
 Autodesk/                  OneDriveTemp/      'System Volume Information'/   swapfile.sys
'Documents and Settings'@   PerfLogs/           Users/

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ user
bash: user: command not found

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ users

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ cd c\users\axum\desktop\programacion
bash: cd: cusersaxumdesktopprogramacion: No such file or directory

Axum@DESKTOP-JP3E8AN MINGW64 /c
$

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ cd /c

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ ls
'$Recycle.Bin'/             DumpStack.log      'Program Files'/               Windows/
'$WinREAgent'/              DumpStack.log.tmp  'Program Files (x86)'/         Windows.old/
'$Windows.~WS'/             ESD/                ProgramData/                  hiberfil.sys
'Archivos de programa'@     Juegos/             Recovery/                     pagefile.sys
 Autodesk/                  OneDriveTemp/      'System Volume Information'/   swapfile.sys
'Documents and Settings'@   PerfLogs/           Users/

Axum@DESKTOP-JP3E8AN MINGW64 /c
$ cd Users

Axum@DESKTOP-JP3E8AN MINGW64 /c/Users
$ ls
'All Users'@   Axum/   Default/  'Default User'@   Public/   desktop.ini

Axum@DESKTOP-JP3E8AN MINGW64 /c/Users
$ cd Axum

Axum@DESKTOP-JP3E8AN MINGW64 ~
$ ls
'3D Objects'/
 AppData/
'Configuración local'@
 Contacts/
 Cookies@
'Datos de programa'@
 Desktop/
 Documents/
 Downloads/
'Entorno de red'@
 Favorites/
 Impresoras@
 Links/
'Menú Inicio'@
'Mis documentos'@
 Music/
 NTUSER.DAT
 NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TM.blf
 NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TMContainer00000000000000000002.regtrans-ms
 OneDrive/
 Pictures/
 Plantillas@
 Reciente@
'Saved Games'/
 Searches/
 SendTo@
 Videos/
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 ntuser.ini

Axum@DESKTOP-JP3E8AN MINGW64 ~
$ cd Desktop

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop
$ ls
 Daniel/            'Libros Universidad'/                  Programacion/   desktop.ini
'Documentos a Yo'/  'Personal Presentation - copia.pptx'   Universidad/

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop
$ cd programacion

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion
$ ls
Programacion/

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion
$ cd programacion

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion
$ ls
Java/  Python/

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion
$ c..
bash: c..: command not found

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion
$ mkdir Git

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion
$ ls
Git/  Java/  Python/

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion
$ cd git

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git
$ touch vacio.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git
$ ls
vacio.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git
$ pwd
/c/Users/Axum/Desktop/programacion/programacion/git

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git
$ git.init
bash: git.init: command not found

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git
$ git init
Initialized empty Git repository in C:/Users/Axum/Desktop/Programacion/Programacion/Git/.git/

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ code

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Historia.txt
        vacio.txt

nothing added to commit but untracked files present (use "git add" to track)

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add Historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git rm
fatal: No pathspec was given. Which files should I remove?

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git rm Historia.txt
error: the following file has changes staged in the index:
    Historia.txt
(use --cached to keep the file, or -f to force removal)

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Historia.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        vacio.txt


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Historia.txt


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Axum@DESKTOP-JP3E8AN.(none)')

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --list ..show
error: wrong number of arguments, should be 0
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --list --show
error: ambiguous option: show (could be --show-origin or --show-scope)
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --global
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config global user.name "Axum"
error: key does not contain a section: global

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --global user.name "Axum"

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --global user.email.useraxum@gmail.com

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Historia.txt


Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "Primer commit"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Axum@DESKTOP-JP3E8AN.(none)')

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.name=Axum
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --global user.email "useraxum@gmail.com"

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.name=Axum
user.email=useraxum@gmail.com
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "Primer archivo"
[master (root-commit) 67b8bef] Primer archivo
 1 file changed, 4 insertions(+)
 create mode 100644 Historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ cat Historia.txt
Cuando Dave, de Asda Hindley, notó que un cliente mayor
se tambaleaba y luchaba con sus compras, decidió llevarlo
a casa en su automóvil para asegurarse de que estaba bien.
Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ code historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Historia.txt

no changes added to commit (use "git add" and/or "git commit -a")

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "Primer cambio, nombre y empresa"
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Historia.txt

no changes added to commit (use "git add" and/or "git commit -a")

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Historia.txt

no changes added to commit (use "git add" and/or "git commit -a")

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "Primer cambio, nombre y empresa"
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Historia.txt

no changes added to commit (use "git add" and/or "git commit -a")

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git log historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add Historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add .

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "primer cambio, pais y nombre"
[master ea8f196] primer cambio, pais y nombre
 1 file changed, 1 insertion(+), 1 deletion(-)

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git log Historia.txt
commit ea8f1962f1760fe2f14a45a5ce1172b3d05f681e (HEAD -> master)
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:43:50 2022 -0500

    primer cambio, pais y nombre

commit 67b8befc0bb0004e58a809fcdda45f697d0f018c
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:38:17 2022 -0500

    Primer archivo

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git show Historia.txt
commit ea8f1962f1760fe2f14a45a5ce1172b3d05f681e (HEAD -> master)
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:43:50 2022 -0500

    primer cambio, pais y nombre

diff --git a/Historia.txt b/Historia.txt
index cc20203..1436e3c 100644
--- a/Historia.txt
+++ b/Historia.txt
@@ -1,4 +1,4 @@
-Cuando Dave, de Asda Hindley, notó que un cliente mayor
+Cuando Dave (No el minion), de una empresa gringa, notó que un cliente mayor
 se tambaleaba y luchaba con sus compras, decidió llevarlo
 a casa en su automóvil para asegurarse de que estaba bien.
 Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
\ No newline at end of file

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ code Historia.txt

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git add .

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git commit -m "Segunda edicion, con extra"
[master 34bb56c] Segunda edicion, con extra
 1 file changed, 2 insertions(+), 1 deletion(-)

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git show
commit 34bb56c51719d0ade2742dfe75a6be21ef9ddc60 (HEAD -> master)
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:51:51 2022 -0500

    Segunda edicion, con extra

diff --git a/Historia.txt b/Historia.txt
index 1436e3c..a7f51f1 100644
--- a/Historia.txt
+++ b/Historia.txt
@@ -1,4 +1,5 @@
 Cuando Dave (No el minion), de una empresa gringa, notó que un cliente mayor
 se tambaleaba y luchaba con sus compras, decidió llevarlo
 a casa en su automóvil para asegurarse de que estaba bien.
-Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
\ No newline at end of file
+Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
+Luego de esto, procede a explotar a sus trabajadores :v
\ No newline at end of file

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git log Historia.txt
commit 34bb56c51719d0ade2742dfe75a6be21ef9ddc60 (HEAD -> master)
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:51:51 2022 -0500

    Segunda edicion, con extra

commit ea8f1962f1760fe2f14a45a5ce1172b3d05f681e
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:43:50 2022 -0500

    primer cambio, pais y nombre

commit 67b8befc0bb0004e58a809fcdda45f697d0f018c
Author: Axum <useraxum@gmail.com>
Date:   Wed Aug 17 11:38:17 2022 -0500

    Primer archivo

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git diff

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ ^C

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git diff34bb56c51719d0ade2742dfe75a6be21ef9ddc60
git: 'diff34bb56c51719d0ade2742dfe75a6be21ef9ddc60' is not a git command. See 'git --help'.

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
$ git diff 34bb56c51719d0ade2742dfe75a6be21ef9ddc60 67b8befc0bb0004e58a809fcdda45f697d0f018c
diff --git a/Historia.txt b/Historia.txt
index a7f51f1..cc20203 100644
--- a/Historia.txt
+++ b/Historia.txt
@@ -1,5 +1,4 @@
-Cuando Dave (No el minion), de una empresa gringa, notó que un cliente mayor
+Cuando Dave, de Asda Hindley, notó que un cliente mayor
 se tambaleaba y luchaba con sus compras, decidió llevarlo
 a casa en su automóvil para asegurarse de que estaba bien.
-Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
-Luego de esto, procede a explotar a sus trabajadores :v
\ No newline at end of file
+Dave: "Con todo lo que hemos pasado en los últimos años, es bueno ser amable".
\ No newline at end of file

Axum@DESKTOP-JP3E8AN MINGW64 ~/Desktop/programacion/programacion/git (master)
